version: '3.5'
name: 'rinha-backend'

services:
  api1: # API - Inst√¢ncia 01
    image: cadpessoa:0.0.1 #Trocar para imagem dockerhub
    container_name: cadpessoa
    hostname: api1
    environment:
      DATASOURCE_HOST: db
#     Habilita Logs do garbage collector
#      JAVA_TOOL_OPTIONS: "-verbose:gc"
#     Habilita monitoramento da JVM remotamente
      JAVA_TOOL_OPTIONS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.rmi.port=9010 -Djava.rmi.server.hostname=localhost"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl 127.0.0.1:9999" ]
    ports:
      - 9999:9999
      - 9010:9010
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1.5GB'
    networks:
      - networker

  db: # Banco de dados
    image: mysql:8.4.0
    container_name: mysqlcomp
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    healthcheck:
      test: "mysql --user=root --password=$$MYSQL_ROOT_PASSWORD --execute \"SHOW DATABASES;\" || exit 1"
      start_period: 4s
      interval: 4s
      timeout: 6s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '1.2GB'
    networks:
      - networker

  nginx: # Load Balancer
    image: nginx:latest
    depends_on:
      api1:
        condition: service_healthy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: '0.3GB'
    networks:
      - networker

networks:
  networker: {}